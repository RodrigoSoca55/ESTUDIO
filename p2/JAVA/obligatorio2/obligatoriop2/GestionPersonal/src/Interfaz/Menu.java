package Interfaz;

import Dominio.Sistema;

import java.awt.BorderLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class Menu extends javax.swing.JFrame {
    //atributos
    private Sistema modelo;
    private inicio vIn;

    //constructores
    public Menu() {
        initComponents();
        vIn = new inicio(modelo, this);
        agregarPanel(vIn);
    }

    public Menu(Sistema miModelo) {
        this.setTitle("Registro Personal ");

        this.modelo = miModelo;
        initComponents();
        vIn = new inicio(modelo, this);
        agregarPanel(vIn);
        this.guardarAlcerrar();

    }

    public Menu(Sistema miModelo, JPanel panel) {
        this.modelo = miModelo;
        Contenido = new JPanel();

        initComponents();
        agregarPanel(panel);
    }

    public void setModelo(Sistema modelo) {
        this.modelo = modelo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        Contenido = new javax.swing.JPanel();
        jMenuBar3 = new javax.swing.JMenuBar();
        menuInicio = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        menuRegistroTematica = new javax.swing.JMenuItem();
        menuConsultaTematica = new javax.swing.JMenuItem();
        menuBajaPostulante = new javax.swing.JMenu();
        menuDarAltaPostulante = new javax.swing.JMenuItem();
        menuDarBajaPostulante = new javax.swing.JMenuItem();
        menuHistorialPostulante = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        menuRegistrarEvaluador = new javax.swing.JMenuItem();
        jMenu12 = new javax.swing.JMenu();
        menuRegistrarEntrevista = new javax.swing.JMenuItem();
        menuPuesto = new javax.swing.JMenu();
        menuRegistrarPuesto = new javax.swing.JMenuItem();
        menuConsultaPuesto = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout ContenidoLayout = new javax.swing.GroupLayout(Contenido);
        Contenido.setLayout(ContenidoLayout);
        ContenidoLayout.setHorizontalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 943, Short.MAX_VALUE)
        );
        ContenidoLayout.setVerticalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 890, Short.MAX_VALUE)
        );

        jMenuBar3.setAlignmentY(0.5F);
        jMenuBar3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        menuInicio.setText("Inicio");
        menuInicio.setFocusable(false);
        menuInicio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        menuInicio.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuInicioMenuSelected(evt);
            }
        });
        menuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInicioActionPerformed(evt);
            }
        });
        jMenuBar3.add(menuInicio);

        jMenu9.setText("Tematica  ");
        jMenu9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenu9.setMargin(new java.awt.Insets(3, 6, 6, 6));

        menuRegistroTematica.setText("Registrar");
        menuRegistroTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRegistroTematicaActionPerformed(evt);
            }
        });
        jMenu9.add(menuRegistroTematica);

        menuConsultaTematica.setText("Consultar");
        menuConsultaTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultaTematicaActionPerformed(evt);
            }
        });
        jMenu9.add(menuConsultaTematica);

        jMenuBar3.add(jMenu9);

        menuBajaPostulante.setText("Postulante");
        menuBajaPostulante.setFocusable(false);
        menuBajaPostulante.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        menuBajaPostulante.setMargin(new java.awt.Insets(3, 9, 3, 6));

        menuDarAltaPostulante.setText("Dar de alta");
        menuDarAltaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDarAltaPostulanteActionPerformed(evt);
            }
        });
        menuBajaPostulante.add(menuDarAltaPostulante);

        menuDarBajaPostulante.setText("Dar de baja");
        menuDarBajaPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDarBajaPostulanteActionPerformed(evt);
            }
        });
        menuBajaPostulante.add(menuDarBajaPostulante);

        menuHistorialPostulante.setText("Historial postulante");
        menuHistorialPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHistorialPostulanteActionPerformed(evt);
            }
        });
        menuBajaPostulante.add(menuHistorialPostulante);

        jMenuBar3.add(menuBajaPostulante);

        jMenu11.setText("Evaluador");
        jMenu11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        menuRegistrarEvaluador.setText("Registrar");
        menuRegistrarEvaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRegistrarEvaluadorActionPerformed(evt);
            }
        });
        jMenu11.add(menuRegistrarEvaluador);

        jMenuBar3.add(jMenu11);

        jMenu12.setText("Entrevista");
        jMenu12.setFocusable(false);
        jMenu12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        menuRegistrarEntrevista.setText("Ingresar");
        menuRegistrarEntrevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRegistrarEntrevistaActionPerformed(evt);
            }
        });
        jMenu12.add(menuRegistrarEntrevista);

        jMenuBar3.add(jMenu12);

        menuPuesto.setText("Puesto");
        menuPuesto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        menuRegistrarPuesto.setText("Registrar");
        menuRegistrarPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRegistrarPuestoActionPerformed(evt);
            }
        });
        menuPuesto.add(menuRegistrarPuesto);

        menuConsultaPuesto.setText("Consultar");
        menuConsultaPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultaPuestoActionPerformed(evt);
            }
        });
        menuPuesto.add(menuConsultaPuesto);

        jMenuBar3.add(menuPuesto);

        setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Contenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Contenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuRegistroTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRegistroTematicaActionPerformed
        registroTematica ventR = new registroTematica(modelo);

        agregarPanel(ventR);

    }//GEN-LAST:event_menuRegistroTematicaActionPerformed

    private void menuConsultaTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultaTematicaActionPerformed
        if (this.modelo.getListaTematicas().size() == 0) {
            darOpcionesExepciones("Tematica");

        } else {

            consultaTematica vTem = new consultaTematica(modelo);
            agregarPanel(vTem);
        }

    }//GEN-LAST:event_menuConsultaTematicaActionPerformed

    private void menuDarAltaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDarAltaPostulanteActionPerformed
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");
        } else {
            altaPostulante ventAP = new altaPostulante(modelo);
            agregarPanel(ventAP);
        }
    }//GEN-LAST:event_menuDarAltaPostulanteActionPerformed

    private void menuDarBajaPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDarBajaPostulanteActionPerformed
        // TODO add your handling code here:
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");
        } else if (this.modelo.getListaPostulantes().isEmpty()) {
            darOpcionesExepciones("Postulante");

        } else {
            bajaPostulante v = new bajaPostulante(modelo);
            agregarPanel(v);
        }
    }//GEN-LAST:event_menuDarBajaPostulanteActionPerformed

    private void menuHistorialPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHistorialPostulanteActionPerformed
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");
        } else if (this.modelo.getListaPostulantes().isEmpty()) {
            darOpcionesExepciones("Postulante");

        } else {
            historialPostulante v = new historialPostulante(modelo);
            agregarPanel(v);
        }
    }//GEN-LAST:event_menuHistorialPostulanteActionPerformed

    private void menuRegistrarEvaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRegistrarEvaluadorActionPerformed
        registroEvaluador v = new registroEvaluador(modelo);
        agregarPanel(v);
    }//GEN-LAST:event_menuRegistrarEvaluadorActionPerformed

    private void menuRegistrarEntrevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRegistrarEntrevistaActionPerformed
        // TODO add your handling code here:
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");
        } else if (this.modelo.getListaPostulantes().isEmpty()) {
            darOpcionesExepciones("Postulante");

        } else if (this.modelo.getListaEvaluadores().isEmpty()) {

            darOpcionesExepciones("Evaluador");

        } else {
            ingresoEntrevista v = new ingresoEntrevista(modelo);
            agregarPanel(v);
        }
    }//GEN-LAST:event_menuRegistrarEntrevistaActionPerformed

    private void menuRegistrarPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRegistrarPuestoActionPerformed
        // TODO add your handling code here:
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");

        } else {
            registroPuesto v = new registroPuesto(modelo);
            agregarPanel(v);
        }
    }//GEN-LAST:event_menuRegistrarPuestoActionPerformed

    private void menuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInicioActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_menuInicioActionPerformed

    private void menuInicioMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuInicioMenuSelected

        agregarPanel(vIn);

    }//GEN-LAST:event_menuInicioMenuSelected

    private void menuConsultaPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultaPuestoActionPerformed
        // TODO add your handling code here:
        if (this.modelo.getListaTematicas().isEmpty()) {
            darOpcionesExepciones("Tematica");

        } else if (this.modelo.getListaPuestos().isEmpty()) {
            darOpcionesExepciones("Puesto");

        } else {
            consultaPuesto v = new consultaPuesto(modelo);
            agregarPanel(v);
        }
    }//GEN-LAST:event_menuConsultaPuestoActionPerformed
    public void agregarPanel(JPanel panel) {
        panel.setSize(850, 880);
        panel.setLocation(0, 0);
        Contenido.removeAll();
        Contenido.add(panel, BorderLayout.CENTER);
        Contenido.revalidate();
        Contenido.repaint();
    }

    public void guardarAlcerrar() {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                try {
                    modelo.guardarDatosSistema();
                } catch (IOException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.exit(0);
            }

        });
    }

    public void darOpcionesExepciones(String opMenu) {
        Object[] opciones = {"Ingresar", "Cancelar"};
        String mensaje = "Ingrese " + opMenu;
        int opcionSeleccionada = JOptionPane.showOptionDialog(this,
                mensaje,
                "Confirmación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones, opciones[0]);
        if (opcionSeleccionada == 0) {
            switch (opMenu.toLowerCase()) {
                case "tematica":
                    registroTematica ventR = new registroTematica(modelo);
                    agregarPanel(ventR);
                    break;
                case "postulante":
                    altaPostulante ventAP = new altaPostulante(modelo);
                    agregarPanel(ventAP);
                    break;
                case "evaluador":
                    registroEvaluador vEv = new registroEvaluador(modelo);
                    agregarPanel(vEv);
                    break;
                case "puesto":
                    registroPuesto vpuesto = new registroPuesto(modelo);
                    agregarPanel(vpuesto);
                    break;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Contenido;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu menuBajaPostulante;
    private javax.swing.JMenuItem menuConsultaPuesto;
    private javax.swing.JMenuItem menuConsultaTematica;
    private javax.swing.JMenuItem menuDarAltaPostulante;
    private javax.swing.JMenuItem menuDarBajaPostulante;
    private javax.swing.JMenuItem menuHistorialPostulante;
    private javax.swing.JMenu menuInicio;
    private javax.swing.JMenu menuPuesto;
    private javax.swing.JMenuItem menuRegistrarEntrevista;
    private javax.swing.JMenuItem menuRegistrarEvaluador;
    private javax.swing.JMenuItem menuRegistrarPuesto;
    private javax.swing.JMenuItem menuRegistroTematica;
    // End of variables declaration//GEN-END:variables
}
